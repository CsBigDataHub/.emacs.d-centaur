#+author: Chetan Koneru
#+title: Emacs notes on Linux

* Building Emacs on Ubuntu

#+begin_src sh
  # https://github.com/hubisan/emacs-wsl

  sudo apt install -y autoconf automake autotools-dev bsd-mailx build-essential \
       diffstat gnutls-dev imagemagick libasound2-dev libc6-dev libdatrie-dev \
       libdbus-1-dev libgconf2-dev libgif-dev libgnutls28-dev libgpm-dev libgtk2.0-dev \
       libgtk-3-dev libice-dev libjpeg-dev liblockfile-dev liblqr-1-0 libm17n-dev \
       libmagickwand-dev libncurses5-dev libncurses-dev libotf-dev libpng-dev \
       librsvg2-dev libsm-dev libthai-dev libtiff5-dev libtiff-dev libtinfo-dev libtool \
       libx11-dev libxext-dev libxi-dev libxml2-dev libxmu-dev libxmuu-dev libxpm-dev \
       libxrandr-dev libxt-dev libxtst-dev libxv-dev quilt sharutils texinfo xaw3dg \
       xaw3dg-dev xorg-dev xutils-dev zlib1g-dev libjansson-dev libxaw7-dev \
       libselinux1-dev libmagick++-dev libacl1-dev gir1.2-javascriptcoregtk-4.0 \
       gir1.2-webkit2-4.0 libenchant1c2a libglvnd-core-dev libicu-le-hb-dev \
       libidn2-0-dev libjavascriptcoregtk-4.0-dev liboss4-salsa2 libsoup2.4-dev \
       libsystemd-dev libwebkit2gtk-4.0-dev libx11-xcb-dev libxcb-dri2-0-dev \
       libxcb-dri3-dev libxcb-glx0-dev libxcb-present-dev libxshmfence-dev \
       x11proto-composite-dev x11proto-core-dev x11proto-damage-dev \
       x11proto-fixes-dev
#+end_src

#+begin_src sh
  git clone --depth=1 --single-branch
  --branch emacs-27 https://github.com/emacs-mirror/emacs.git

  cd emacs/

  sudo apt install -y autoconf make gcc texinfo libgtk-3-dev libxpm-dev \
       libjpeg-dev libgif-dev libtiff5-dev libgnutls28-dev libncurses5-dev \
       libjansson-dev libharfbuzz-dev libharfbuzz-bin

  ./autogen.sh

  # ./configure --with-json --with-modules --with-harfbuzz --with-compress-install \
  #             --with-threads --with-included-regex --with-x-toolkit=lucid --with-zlib --without-sound \
  #             --without-xpm --with-jpeg --without-tiff --without-gif --with-png \
  #             --without-rsvg --with-imagemagick  --without-toolkit-scroll-bars \
  #             --without-gpm --without-dbus --without-makeinfo --without-pop \
  #             --without-mailutils --without-gsettings --without-pop


  #./configure --with-json --with-modules --with-harfbuzz --with-compress-install \
  #            --with-threads --with-included-regex --with-xwidgets --with-zlib

  # I used this
  ./configure --with-json --with-xwidgets --with-mailutils

  make
  sudo make install
#+end_src




* [[https://unix.stackexchange.com/a/151046][x11 - CapsLock as modifier key for application keymaps - Unix & Linux Stack Exchange]] :website:

[2020-08-17 Mon 10:36]

** Article

There are a bajillion answers on the internet, most of them confusing.

The key is you need to map 'keycode 66' to your hyper key, remove the mapping of that key from other mod{1,2,4,5}'s (only if present), and then set mod3.

Open ~/.Xmodmap and put the following:

#+BEGIN_EXAMPLE
  clear mod3
  ! Unmap capslock
  clear Lock
  keycode 66 = Hyper_L

  ! Leave mod4 as windows key _only_
  remove mod4 = Hyper_L

  ! Set mod3 to capslock
  add mod3 = Hyper_L
#+END_EXAMPLE

Run this

#+BEGIN_EXAMPLE
   xmodmap ~/.Xmodmap
#+END_EXAMPLE

If something goes wrong, you can reset your keyboard with:

#+BEGIN_EXAMPLE
   setxkbmap -layout us
#+END_EXAMPLE

Likely causes of something exploding are that Hyper_L is mapped someplace else. Fix this by running xmodmap without args to figure out what else is bound to Hyper_L. When you know what you need to remove, chuck a 'remove BINDING = Hyper_L' in your .Xmodmap file.

The .Xmodmap file will be loaded in when you open X11 sessions, you should have this mapping in place next time you login or reboot.

This configuration works for my ubuntu 14.04 setup. If you have a different *nix and this doesn't work, please post what you did to get around it here and I'll incorporate it into the answer.

** [[https://askubuntu.com/a/1197073][keyboard - How do I remap Caps Lock to Hyper Key in Ubuntu 18.04 - Ask Ubuntu]] :website:

[2020-08-17 Mon 10:37]

*** Article

As of a few days ago this is working:

- Run Ubuntu on Wayland
- Put this in your .bashrc

#+BEGIN_EXAMPLE
  setxkbmap -option caps:hyper
  setxkbmap -option caps:none
#+END_EXAMPLE

*** [[https://www.emacswiki.org/emacs/CapsKey][EmacsWiki: Caps Key]] :website:

[2020-08-17 Mon 10:38]

**** Article


***** [[https://www.emacswiki.org/emacs?search=%22CapsKey%22][Caps Key]]


This page is about the keyboard key typically labeled *[[https://www.emacswiki.org/emacs?search=%22CapsLock%22][CapsLock]]*. It covers different ways to use the key, including changing its behavior.

****** Contents

 [[#toc6][Using CapsLock as Hyper Modifier]]

****** Redefining as autocomplete/expand


It's useful to map the [[https://www.emacswiki.org/emacs/CapsKey][CapsKey]] to dabbrev-expand, for automatic completion/expansion. Here's how:

In ~/.Xmodmap, remap the Caps_Lock key to some suitable key:

#+BEGIN_EXAMPLE
   ! Caps Lock -> Nabla
   keycode 66 = nabla
#+END_EXAMPLE

Then in your ~/.emacs:

#+BEGIN_EXAMPLE
   ;; Seems emacs23 doesn't understand nabla
   (when (equal "23" (substring emacs-version 0 2))
       (global-set-key '[8711] 'dabbrev-expand))
#+END_EXAMPLE

****** Using CapsLock as Hyper Modifier


More modifiers are always good :-)

In ~/.Xmodmap, remap the Caps_Lock key to some suitable key:

#+BEGIN_EXAMPLE
   ! Caps Lock -> Nabla
   keycode 66 = nabla
#+END_EXAMPLE

If you add this to your .emacs you will get an Hyper key in gtk and in an xterm!

#+BEGIN_EXAMPLE
   (define-key key-translation-map [8711] 'event-apply-hyper-modifier)
#+END_EXAMPLE

* To keep focus for firefox tabs

#+begin_example
  browser.tabs.loadDivertedInBackground
#+end_example

* [[https://askubuntu.com/a/1271886][Scanner of Epson ET-2750 doesn't work - "sane_start: Invalid argument" - Kubuntu 20.04 - Ask Ubuntu]] :website:

[2020-10-27 Tue 18:37]

** Article

*** Preface


- Kubuntu 20.04
- Epson ET-3750, so not exactly your model. I faced the same problems, though.
- The TL;DR solution can be found in the Epilogue below.
- All the experiments were done over WiFi, the device was never connected via USB.

*** XSane


1. I was very biased to get XSane to work: I did the logo some 20 years ago.
2. For me, the error you describe goes away, when I do a preview scan first. /This is my answer to your original question./ But if you, like me, tried to get the thing to scan under Linux, be my guest for the odyssey in the rest of this post. I imagine that it'll be very similar to your printer/scanner.
3. BXSane usually crashes with a segfault while writing the results (using PNG target format). It /did/ work once, but I've had many crashes.
4. Scanning without saving worked at 300DPI but never at 600DPI or higher. I didn't try all resolutions. At 600DPI I get the same error message (invalid argument, ung√ºltiges Argument) after the scan finishes.

Then I installed Epsons imagescan packages (available at [[http://support.epson.net/linux/en/imagescanv3.php]]). I had to configure a suitable =/etc/imagescan/imagescan.conf= by adding the correct IP to the default file and uncommenting the relevant lines.

After that, another scanner is found by XSane. The label depends on what you enter into the aforementioned conf file.

With this backend, XSane even allows using the document feeder (ADF) as input, not only the flatbed. But it doesn't let me select the resolution at all. And the multi-page interface of XSane is ...uh... sub-optimal.

*** Skanlite


After all that, I tried the program Skanlite.

- Works @300 DPI with the escl connection, throws invalid argument at 600DPI
- Works with imagescan scanner at resolutions up to 600DPI, also with ADF.
- Doesn't support PDF, let alone multi-page PDF. It saves all pages to separate files.

*** SimpleScan


- SimpleScan also detects the out-of-the-box escl scanner and the imagescan-backed scanner.
- ADF works almost fine with imagescan backend and produces a multi-page PDF. I can select different resolutions here. The scans are a bit on the bluish side of things, though.
- It pretends to be able to do ADF via the escl connection, too. But that never works. Generally speaking, it never seems to grey out any options, regardless whether they work or not.
- I scans well at 300DPI with the escl connection.
- SimpleScan has almost no image quality correction settings, like the other tools provide.
- Apparently only PDF is supported as an output format.
- During my testing the ADF functionality with the imagescan connection stopped working. Crossing my fingers it will work again in the future.

*** ImageScan


- The scanning tool from Epson only finds the one scanner that is configured in =/etc/imagescan/imagescan.conf=
- It allows selection of input from flatbed and ADF
- ADF scan produced a multi-page PDF
- This was the only program that I could get to scan at more than 300DPI. At 1200DPI it produced a ca 200MB PNG file.

*** Scanner's Scan to Computer


I have no clue what the ET-3750 expects from a computer to be able to "scan to it". I tried some unprotected Samba shares but to no avail. Maybe USB would work?

*** Conclusion


- Every solution sucks in some way or the other
- I'll go with SimpleScan + imagescan-backend or imagescan program whenever I want to scan several pages from the ADF. Of course, this requires that the ADF thing works again in SimpleScan.
- I'll likely go with Skanlite and either the imagescan or escl backend for 1 page scans from the flatbed.
- (UPDATE) Also, let's wait for the next version of SANE which ships support for ET-2650 and ET-3750, hopefully covering your ET-2750 as well. See [[https://sane-project.gitlab.io/website/lists/sane-mfgs-cvs.html]]

*** Epilogue


- I installed the latest release from SANE using the PPA of one of the SANE maintainers: [[https://launchpad.net/%7Erolfbensch/+archive/ubuntu/sane-release][https://launchpad.net/~rolfbensch/+archive/ubuntu/sane-release]]
- After that everything just works with the eSCL backend. High resolution scans, ADF, multi-page scans.
- You can use XSane, Skanlite, SimpleScan, depending on frontend features.
- I'll eventually purge the Epson packages.
- Kudos and a huge thank you to the SANE maintainers.
